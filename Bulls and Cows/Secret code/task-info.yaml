type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram();
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
- name: src/bullscows/SecretCodeGenerator.java
  visible: true
  text: "package bullscows;\n\npublic class SecretNumberGenerator {\n    \n}\n"
  learner_created: true
- name: src/bullscows/Grader.java
  visible: true
  text: |
    package bullscows;

    public class Grader {
        static void grader(int secret, int attempt) {
            String secretDigits = String.valueOf(secret);
            String attemptDigits = String.valueOf(attempt);
            int bulls = 0;
            int cows = 0;
            for (int i = 0; i < secretDigits.length(); i++){
                if (secretDigits.charAt(i) == attemptDigits.charAt(i)){
                    bulls++;
                }
                else if (secretDigits.contains(String.valueOf(attemptDigits.charAt(i)))){
                    cows++;
                }
            }
            System.out.println("Grade: " +
                    (bulls > 0 && cows > 0 ? bulls + " bull(s) and " + cows + " cow(s)"
                            : bulls > 0 && cows == 0 ? bulls + " bull(s)" :
                            cows > 0 && bulls == 0 ? cows + " cow(s)" : "None") +
                    ". The secret code is " +
                    secret
                    );
        }
    }
  learner_created: true
- name: src/bullscows/Printer.java
  visible: true
  text: |-
    package bullscows;

    public class Printer {
    }


    //        System.out.println("The secret code is prepared: ****.\n" +
    //                "\n" +
    //                "Turn 1. Answer:\n" +
    //                "1234\n" +
    //                "Grade: None.\n" +
    //                "\n" +
    //                "Turn 2. Answer:\n" +
    //                "9876\n" +
    //                "Grade: 4 bulls.\n" +
    //                "Congrats! The secret code is 9876.");
  learner_created: true
feedback_link: https://hyperskill.org/projects/53/stages/289/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Sun, 06 Jun 2021 12:28:04 UTC
record: 3
